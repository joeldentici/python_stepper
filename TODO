1. Create actual milestones and replace this with that...

Fall Quarter:

1. Convert to python 3
2. Print stack state after every function call. Print this to stderr, not stdout, so redirection can be used to clean up interleaving
3. Annotate operators
	* Pretty much every statement or expression that is not a function call

4. Implement annotation of statements that cause in-memory mutation (not mutation of the outside world aka effects)
	* This needs to report the evaluation as happening in an algebraic way
	* This modeling will be similar to a Hoare triple, that is, each mutating statement is represented as a triple of the initial program state, the statement being evaluated, and the final program state

Winter Quarter:

1. Implement interactivity (make calls to stepper_lib.py blocking)

2. Implement some sort of UI shell around the core using the interactive interface
	* Need a terminal-based UI
	* Possibly create a web-based GUI if time permits (this should be easier than the stepper itself).